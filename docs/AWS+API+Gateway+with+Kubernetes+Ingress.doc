Date: Fri, 12 Jul 2019 05:44:09 +0000 (UTC)
Message-ID: <1326525036.57.1562910249027@f2eb604d0c57>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_56_486806506.1562910249027"

------=_Part_56_486806506.1562910249027
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>AWS API Gateway with Kubernetes Ingress</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        table {
            border: solid 1px;
            border-collapse: collapse;
        }

        table td, table th {
            border: solid 1px;
            padding: 5px;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    /* CONF-28544 cannot print multiple pages in IE */
    #splitter-content {
        position: relative !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }

    .no-print, .no-print * {
        display: none !important;
    }
}
-->
    </style>
</head>
<body>
    <h1>AWS API Gateway with Kubernetes Ingress</h1>
    <div class=3D"Section1">
        <div class=3D"content">
<h3 id=3D"AWSAPIGatewaywithKubernetesIngress-AWSAPIGatewayIntegrationwithEK=
SclusterbyusingPublicNLB."><br><strong>AWS API Gateway Integration with EKS=
 cluster by using Public NLB.</strong></h3>
<p><br>Before you get started, you have the functional EKS cluster and Inte=
rnet facing NLB (<strong>nginx-ingress-controller</strong>).</p>
<h3 id=3D"AWSAPIGatewaywithKubernetesIngress-InstallPrerequisites"><strong>=
Install Prerequisites</strong></h3>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: bash; gutter: false; theme: Emacs" data-theme=3D"Emacs">install and confi=
gure awscli
#Check if you have installed awscli
$aws --version
=20
#If not, please install awscli
$pip3 install awscli --upgrade --user
=20
#Add awscli executable to your $PATH
=20
#Configure awscli
$aws configure set aws_access_key_id $MY_AWS_ADMIN_KEY_ID
$aws configure set aws_secret_access_key $MY_AWS_ADMIN_ACCESS_KEY
$aws configure set default.region $MY_K8S_CLUSTER_REGION
                              (or)
$aws configure
=20
AWS Access Key ID : $MY_ACCESS_KEY_ID
=20
AWS Secret Access Key : $MY_SECRET_KEY_ID
=20
Default region name : $MY_REGION
=20
Default output format [None]:</pre>=20
</div>
</div>
<ul style=3D"list-style-type: square;">
<li>Install&nbsp;<a href=3D"https://gitlab.com/gourmet-plus/infrastructure/=
tree/master/cluster-manifest" class=3D"external-link" rel=3D"nofollow">EKS =
Cluster</a></li>
<li>Install&nbsp;<a href=3D"https://gitlab.com/gourmet-plus/infrastructure/=
tree/master/nginx-ingress" class=3D"external-link" rel=3D"nofollow">Public =
NLB</a> ( Nginx-Ingress-Controller)<br><br></li>
</ul>
<p>First of all, we are going to create a new API in API Service Gateway.</=
p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: bash; gutter: false; theme: Emacs" data-theme=3D"Emacs">$ aws apigateway =
create-rest-api  --endpoint-configuration types=3DREGIONAL --name demo

$ export API_ID=3D&lt;created api id&gt;

$ aws apigateway get-resources --rest-api-id=3D$API_ID

$ export PARENT_ID=3D&lt;resource id&gt;

$ aws apigateway create-resource \
=09--rest-api-id=3D$API_ID \
=09--parent-id=3D$PARENT_ID \
=09--path-part=3D"health"

$ export HEALTH_ID=3D&lt;resource id&gt;

$ aws apigateway put-method \
=09--rest-api-id=3D$API_ID \
=09--resource-id $HEALTH_ID \
=09--http-method GET \
=09--authorization-type NONE</pre>=20
</div>
</div>
<p><br></p>
<p>In this scenario, I'll use&nbsp;(<code class=3D"language-yaml"><strong>c=
allmeradical/healthy</strong>)</code> docker image as demo<code class=3D"la=
nguage-yaml">.<br></code><br>The app we are going to use is a restful appli=
cation that responds to a GET on the /health endpoint on port 8080 and prin=
ts =E2=80=9CWe are healthy!=E2=80=9D</p>
<p>So now this little snippet of yaml will create a deployment in kubernete=
s and expose it. Let=E2=80=99s go ahead and deploy our app. While we are at=
 it we can verify our app is in fact actually running and serving traffic.<=
/p>
<p><br></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: bash; gutter: false; theme: Emacs" data-theme=3D"Emacs">$ kubectl create =
-f kubernetes/healthy-deployment-svc.yml

$ kubectl get pods

$ kubectl port-forward &lt;name of pod here&gt; 8080:8080

$ curl localhost:8080/health
{
=09"version": "v1.0",
=09"message": "We are Healthy!"

}</pre>=20
</div>
</div>
<p>Now we have our app and a skeleton for API Gateway, but we aren=E2=80=99=
t quite done, everything is still very disjointed. We still need to create =
our ingress rule, our nginx controller, and finish creating the API gateway=
.</p>
<p>Now we want to expose our load balancer so we can forward traffic to it =
from our API Gateway. There are a couple of ways to create a Kubernetes ser=
vice; You can create a spec file like we have been doing above, or you can =
just issue the command directly to the Kubernetes API via kubectl. Let=E2=
=80=99s go with the second option.</p>
<pre><br></pre>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: bash; gutter: false; theme: Emacs" data-theme=3D"Emacs">$kubectl get svc =
-n kube-system |grep -i public-lb

public-lb-nginx-ingress-controller&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 LoadBalancer &nbsp; 10.100.147.30&nbsp; &nbsp; abd6c1dc881ec11e9ab9306383d=
8e044-1b959457b11a7a7e.elb.ap-southeast-2.amazonaws.com &nbsp; 80:31330/TCP=
,443:30099/TCP &nbsp; 20d

public-lb-nginx-ingress-controller-metrics&nbsp; &nbsp; ClusterIP&nbsp; &nb=
sp; &nbsp; 10.100.145.55&nbsp; &nbsp; &lt;none&gt; &nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; &nbsp; 9913/TCP &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; =
&nbsp; &nbsp; &nbsp; &nbsp; 20d

public-lb-nginx-ingress-controller-stats&nbsp; &nbsp; &nbsp; ClusterIP&nbsp=
; &nbsp; &nbsp; 10.100.89.193&nbsp; &nbsp; &lt;none&gt; &nbsp; &nbsp; &nbsp=
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; 18080/TCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp; &nbsp; &nbsp; &nbsp; &nbsp; 20d

public-lb-nginx-ingress-default-backend &nbsp; &nbsp; &nbsp; ClusterIP&nbsp=
; &nbsp; &nbsp; 10.100.96.6&nbsp; &nbsp; &nbsp; &lt;none&gt; &nbsp; &nbsp; =
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp=
; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 80/TCP &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 20d


$kubectl get pods -n default

NAME&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; READY &nbsp; =
STATUS&nbsp; &nbsp; RESTARTS &nbsp; AGE

healthy-bcd7f7cd-sr89t&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbs=
p; &nbsp; &nbsp; 1/1 &nbsp; &nbsp; Running &nbsp; 0&nbsp; &nbsp; &nbsp; &nb=
sp; &nbsp; 7d7h

</pre>=20
</div>
</div>
<p class=3D"p1"><br></p>
<pre>Let=E2=80=99s hit our load balancer and see what we get so far.<br><br=
><span class=3D"confluence-embedded-file-wrapper confluence-embedded-manual=
-size"><img class=3D"confluence-embedded-image" width=3D"468" src=3D"c17d44=
1a4ac6d45c7b49917238251ab2" data-image-src=3D"https://gpluswiki.atlassian.n=
et/wiki/download/attachments/39846092/Screenshot%202019-06-18%20at%205.46.5=
3%20PM.png?version=3D1&amp;modificationDate=3D1560851273482&amp;cacheVersio=
n=3D1&amp;api=3Dv2" data-unresolved-comment-count=3D"0" data-linked-resourc=
e-id=3D"39878833" data-linked-resource-version=3D"1" data-linked-resource-t=
ype=3D"attachment" data-linked-resource-default-alias=3D"Screenshot 2019-06=
-18 at 5.46.53 PM.png" data-base-url=3D"https://gpluswiki.atlassian.net/wik=
i" data-linked-resource-content-type=3D"image/png" data-linked-resource-con=
tainer-id=3D"39846092" data-linked-resource-container-version=3D"8" data-me=
dia-id=3D"74f84539-cb93-4792-bf56-6558b880541d" data-media-type=3D"file" he=
ight=3D"268"></span></pre>
<p><br></p>
<p>Great so we now have our nginx controller exposed, looks like it is work=
ing=E2=80=A6</p>
<p>Let=E2=80=99s set up our ingress to verify that we can route traffic to =
our application. An Ingress is a collection of rules that allowi inbound co=
nnections to reach the cluster services. I am using Route53 for my DNS for =
this example. I created an entry in the<span>&nbsp;"<strong>dev.thegourmetp=
lus.net"</strong></span><span>&nbsp;</span>hosted zone for an alias to Netw=
ork load balancer that we created just before this. When I hit this record =
with the =E2=80=9C/health=E2=80=9D endpoint, it will route traffic to our h=
ealthy-app and provide a health check.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: bash; gutter: false; theme: Emacs" data-theme=3D"Emacs">#cat&nbsp;healthy=
-ingress.yaml&nbsp;

apiVersion: extensions/v1beta1

kind: Ingress

metadata:

&nbsp; name: healthy-ingress

&nbsp; annotations:

&nbsp; &nbsp; kubernetes.io/ingress.class: public-lb

spec:

&nbsp; rules:

&nbsp; &nbsp; - host: aws-api-demo.dev.thegourmetplus.net

&nbsp; &nbsp; &nbsp; http:

&nbsp; &nbsp; &nbsp; &nbsp; paths:

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; - path: /health

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; backend:

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; serviceName: healthy-app

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; servicePort: 80</pre>=20
</div>
</div>
<p class=3D"p2">So now we have our basic app, an nginx controller, default =
web backend, an ingress rule that is currently mapping our =E2=80=9C/health=
=E2=80=9D endpoint to our healthy-app service.</p>
<p>We are going to front our services using API Gateway so other teams can =
use whatever delivery method they choose. We are now going to finish our AP=
I Gateway service we started building out. This includes creating our metho=
d, integration, integration-response, method-response, and deploying our AP=
I.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: bash; gutter: false; theme: Emacs" data-theme=3D"Emacs">$ aws apigateway =
put-method \
=09--rest-api-id $API_ID \
=09--resource-id $HEALTH_ID \
=09--http-method GET \
=09--authorization-type NONE

$ aws apigateway put-integration \
=09--rest-api-id $API_ID \
=09--resource-id $HEALTH_ID \
=09--http-method GET \
=09--type HTTP \
=09--integration-http-method GET \
=09--uri http://aws-api-demo.dev.thegourmetplus.net/health \
=09--passthrough-behavior WHEN_NO_MATCH

$ aws apigateway put-integration-response \
=09--rest-api-id $API_ID  \
=09--resource-id $HEALTH_ID \
=09--http-method GET \
=09--status-code 200 \
=09--response-templates '{"application/json": ""}'

$ aws apigateway put-method-response \
=09--rest-api-id $API_ID \
=09--resource-id $HEALTH_ID \
=09--http-method GET \
=09--status-code 200 \
=09--response-models '{"application/json": "Empty"}'

$ aws apigateway create-deployment \
=09--rest-api-id $API_ID \
=09--stage-name v1 \
=09--stage-description 'v1 of our api' \
=09--description 'first deployment'</pre>=20
</div>
</div>
<pre><code class=3D"language-bash hljs">
</code></pre>
<p>Now that we have our API deployed we can navigate to the invoke URL of t=
he API, or just curl it. <br>The invoke URL is in the following form: (&nbs=
p;<a class=3D"vglnk" style=3D"text-decoration: none;" rel=3D"nofollow"><spa=
n>https</span><span>://$</span><span>API</span><span>_</span><span>ID</span=
><span>.</span><span>execute</span><span>-</span><span>api</span><span>.$</=
span><span>REGION</span><span>.</span><span>amazonaws</span><span>.</span><=
span>com</span><span>/$</span><span>STAGE/$API_ENDPOINT )</span></a></p>
<p>On the other hand, you can also check it out at the AWS Console:<br><a h=
ref=3D"https://ap-southeast-2.console.aws.amazon.com/apigateway/home?region=
=3Dap-southeast-2#/apis" class=3D"external-link" rel=3D"nofollow">https://a=
p-southeast-2.console.aws.amazon.com/apigateway/home?region=3Dap-southeast-=
2#/apis</a>&nbsp;<br><br></p>
</div>
    </div>
</body>
</html>
------=_Part_56_486806506.1562910249027
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: file:///C:/c17d441a4ac6d45c7b49917238251ab2

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
YrFn4d6v/CcSCR6ZERHRh7LrTSEfpX4P7T7sfxqBiIj+8PmBFvePq8Vl3U7/fEXws/AvPcSfSmSQ
ERHRR+WBHqERERF9XPhQGBERKYGBRkRESmCgERGREhhoRESkBAYaEREpgYFGRERKYKAREZESGGhE
RKQEBhoRESmBgUZEREpgoBERkRIYaEREpAQGGhERKYGBRkRESmCgERGREhhoRESkBAYaEREpgYFG
RERKYKAREZESGGhERKQEBhoRESmBgUZEREpgoBERkRIYaEREpAQGGhERKYGBRkRESmCgERGREhho
RESkBAYaEREpgYFGRERKYKAREZESGGhERKQEBhoRESmBgUZEREpgoBERkRIYaEREpAQGGhERKYGB
RkRESmCgERGREhhoRESkBAYaEREpgYFGRERKYKAREZESGGhERKQEBhoRESmBgUZEREpgoBERkRIY
aEREpAQGGhERKYGBRkRESmCgERGREhhoRESkBAYaEREpgYFGRERKYKAREZESGGhERKQEBhoRESmB
gUZEREpgoBERkRIYaEREpAQGGhERKYGBRkRESmCgERGREhhoRESkBAYaEREpgYFGRERKYKAREZES
GGhERKQEBhoRESmBgUZEREpgoBERkRIYaEREpAQGGhERKYGBRkRESmCgERGREhhoRESkBAYaEREp
gYFGRERKYKAREZESGGhERKQEBhoRESmBgUZEREpgoBERkRIYaEREpAQGGhERKYGBRkRESmCgERGR
EhhoRESkBAYaEREpgYFGRERKYKAREZESGGhERKQEBhoRESmBgUZEREpgoBERkRIYaEREpAQGGhER
KYGBRkRESmCgERGREhhoRESkBAYaEREpgYFGRERKYKAREZESGGhERKQEBhoRESmBgUZEREpgoBER
kRIYaEREpAQGGhERKYGBRkRESmCgERGREhhoRESkBAYaEREpgYFGRERKYKAREZESGGhERKQEBhoR
ESmBgUZEREpgoBERkRIYaEREpAQGGhERKYGBRkRESmCgERGREhhoRESkBAYaEREpgYFGRERKYKAR
EZESGGhERKQEBhoRESmBgUZEREpgoBERkRIYaEREpAQGGhERKYGBRkRESmCgERGREhhoRESkBAYa
EREpgYFGRERKYKAREZESGGhERKQEBhoRESmBgUZEREpgoBERkRIYaEREpAQGGhERKYGBRkRESmCg
ERGREhhoRESkBAYaEREpgYFGRERKYKAREZESGGhERKQEBhoRESmBgUZEREpgoBERkRIYaEREpAQG
GhERKYGBRkRESmCgERGREhhoRESkBAYaEREpgYFGRERKYKAREZESGGhERKQEBhoRESmBgUZEREpg
oBERkRIYaEREpAQGGhERKYGBRkRESmCgERGREhhoRESkBAYaEREpgYFGRERKYKAREZESGGhERKQE
BhoRESmBgUZEREpgoBERkRIYaEREpAQGGhERKYGBRkRESmCgERGREhhoRESkBAYaEREpgYFGRERK
YKAREZESGGhERKQEBhoRESmBgUZEREpgoBERkRIYaEREpAQGGhERKYGBRkRESmCgERGREhhoRESk
BAYaEREpgYFGRERKYKAREZESGGhERKQEBhoRESmBgUZEREpgoBERkRIYaEREpAQGGhERKYGBRkRE
SmCgERGREhhoRESkBAYaEREpgYFGRERKMPYykpTy4y4HERFRX0KIXcfZ9QiNYUZERA/bXrIo9git
34QMNyIietC8o7NgBsUdsQkZSam40GKQERHRwxYNsZ73wUCLBlfwfb/XREREHwcvsILBtVOo+YHW
L8yklAwzIiJ64KJB1i/YvNcGsHuY9Qs3IiKij0s0xLxhgJtH0dfGXsIsLtiIiIg+Tl6g7XbtzGPE
BVVPkDkOJCQch4FGRPQgCSH+aNtcL8w0TQuFWzDkvL+apvXe5RjH6YSaEzlSowdr98cK40VvdbVt
O3Sormma/zp4GC8E4DjSr1Af93bfy4OTfxesrwR8fPXr4ySlhOM40HU9ONDdOaXTea11dlbbfd0d
EW6rEfNXCPe1Py8ZM13g9UNYd8Hg8gJtN8Z//tF/wpOf+Swc6UBA+I2aG14OHCf8V0r4X95bBWKH
193Sdf7K3tXb/xvt/qV7lhrdFv58+oyz5yV0SywhI8MBCem/jhYJnSnC60b4w/dCQkQq6955YeT9
NzAwANu2Yds2UqkUKpUKdF2HaZowTRPNZhOO4wAA0uk0LMtCpVL52EPN23k/SkIIGIbBUPsjJ4SA
4ziwbfuBL9ere3HPUu1ESolEIoFCoYD19XV3OqFB6AlIuwXNzABGCrK1DdmuQ8uMQLZrbtAJAaGZ
kE7b/wtN74SeDtgtSOm482rXIMw0umGnA7ITjkIDpA1ptdz5PkBxgRZ3tOaNe/78efx/h+66GiSA
di4AAAAASUVORK5CYII=
------=_Part_56_486806506.1562910249027--
